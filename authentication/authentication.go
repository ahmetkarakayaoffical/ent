// Code generated by ent, DO NOT EDIT.

package authentication

import (
	"fmt"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the authentication type in the database.
	Label = "authentication"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUseCertificates holds the string denoting the use_certificates field in the database.
	FieldUseCertificates = "use_certificates"
	// FieldAllowRegister holds the string denoting the allow_register field in the database.
	FieldAllowRegister = "allow_register"
	// FieldUseOIDC holds the string denoting the use_oidc field in the database.
	FieldUseOIDC = "use_oidc"
	// FieldOIDCProvider holds the string denoting the oidc_provider field in the database.
	FieldOIDCProvider = "oidc_provider"
	// FieldOIDCEndpoint holds the string denoting the oidc_endpoint field in the database.
	FieldOIDCEndpoint = "oidc_endpoint"
	// FieldOIDCClientID holds the string denoting the oidc_client_id field in the database.
	FieldOIDCClientID = "oidc_client_id"
	// FieldOIDCRole holds the string denoting the oidc_role field in the database.
	FieldOIDCRole = "oidc_role"
	// FieldOIDCCookieEncriptionKey holds the string denoting the oidc_cookie_encription_key field in the database.
	FieldOIDCCookieEncriptionKey = "oidc_cookie_encription_key"
	// FieldOIDCKeycloakPublicKey holds the string denoting the oidc_keycloak_public_key field in the database.
	FieldOIDCKeycloakPublicKey = "oidc_keycloak_public_key"
	// FieldOIDCAutoCreateAccount holds the string denoting the oidc_auto_create_account field in the database.
	FieldOIDCAutoCreateAccount = "oidc_auto_create_account"
	// FieldOIDCAutoApprove holds the string denoting the oidc_auto_approve field in the database.
	FieldOIDCAutoApprove = "oidc_auto_approve"
	// Table holds the table name of the authentication in the database.
	Table = "authentications"
)

// Columns holds all SQL columns for authentication fields.
var Columns = []string{
	FieldID,
	FieldUseCertificates,
	FieldAllowRegister,
	FieldUseOIDC,
	FieldOIDCProvider,
	FieldOIDCEndpoint,
	FieldOIDCClientID,
	FieldOIDCRole,
	FieldOIDCCookieEncriptionKey,
	FieldOIDCKeycloakPublicKey,
	FieldOIDCAutoCreateAccount,
	FieldOIDCAutoApprove,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultUseCertificates holds the default value on creation for the "use_certificates" field.
	DefaultUseCertificates bool
	// DefaultAllowRegister holds the default value on creation for the "allow_register" field.
	DefaultAllowRegister bool
	// DefaultUseOIDC holds the default value on creation for the "use_OIDC" field.
	DefaultUseOIDC bool
	// DefaultOIDCEndpoint holds the default value on creation for the "OIDC_endpoint" field.
	DefaultOIDCEndpoint string
	// DefaultOIDCClientID holds the default value on creation for the "OIDC_client_id" field.
	DefaultOIDCClientID string
	// DefaultOIDCRole holds the default value on creation for the "OIDC_role" field.
	DefaultOIDCRole string
	// DefaultOIDCCookieEncriptionKey holds the default value on creation for the "OIDC_cookie_encription_key" field.
	DefaultOIDCCookieEncriptionKey string
	// DefaultOIDCKeycloakPublicKey holds the default value on creation for the "OIDC_keycloak_public_key" field.
	DefaultOIDCKeycloakPublicKey string
	// DefaultOIDCAutoCreateAccount holds the default value on creation for the "OIDC_auto_create_account" field.
	DefaultOIDCAutoCreateAccount bool
	// DefaultOIDCAutoApprove holds the default value on creation for the "OIDC_auto_approve" field.
	DefaultOIDCAutoApprove bool
)

// OIDCProvider defines the type for the "OIDC_provider" enum field.
type OIDCProvider string

// OIDCProvider values.
const (
	OIDCProviderAuthentik OIDCProvider = "authentik"
	OIDCProviderKeycloak  OIDCProvider = "keycloak"
	OIDCProviderZitadel   OIDCProvider = "zitadel"
)

func (_oidc_provider OIDCProvider) String() string {
	return string(_oidc_provider)
}

// OIDCProviderValidator is a validator for the "OIDC_provider" field enum values. It is called by the builders before save.
func OIDCProviderValidator(_oidc_provider OIDCProvider) error {
	switch _oidc_provider {
	case OIDCProviderAuthentik, OIDCProviderKeycloak, OIDCProviderZitadel:
		return nil
	default:
		return fmt.Errorf("authentication: invalid enum value for OIDC_provider field: %q", _oidc_provider)
	}
}

// OrderOption defines the ordering options for the Authentication queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByUseCertificates orders the results by the use_certificates field.
func ByUseCertificates(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUseCertificates, opts...).ToFunc()
}

// ByAllowRegister orders the results by the allow_register field.
func ByAllowRegister(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAllowRegister, opts...).ToFunc()
}

// ByUseOIDC orders the results by the use_OIDC field.
func ByUseOIDC(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUseOIDC, opts...).ToFunc()
}

// ByOIDCProvider orders the results by the OIDC_provider field.
func ByOIDCProvider(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldOIDCProvider, opts...).ToFunc()
}

// ByOIDCEndpoint orders the results by the OIDC_endpoint field.
func ByOIDCEndpoint(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldOIDCEndpoint, opts...).ToFunc()
}

// ByOIDCClientID orders the results by the OIDC_client_id field.
func ByOIDCClientID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldOIDCClientID, opts...).ToFunc()
}

// ByOIDCRole orders the results by the OIDC_role field.
func ByOIDCRole(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldOIDCRole, opts...).ToFunc()
}

// ByOIDCCookieEncriptionKey orders the results by the OIDC_cookie_encription_key field.
func ByOIDCCookieEncriptionKey(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldOIDCCookieEncriptionKey, opts...).ToFunc()
}

// ByOIDCKeycloakPublicKey orders the results by the OIDC_keycloak_public_key field.
func ByOIDCKeycloakPublicKey(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldOIDCKeycloakPublicKey, opts...).ToFunc()
}

// ByOIDCAutoCreateAccount orders the results by the OIDC_auto_create_account field.
func ByOIDCAutoCreateAccount(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldOIDCAutoCreateAccount, opts...).ToFunc()
}

// ByOIDCAutoApprove orders the results by the OIDC_auto_approve field.
func ByOIDCAutoApprove(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldOIDCAutoApprove, opts...).ToFunc()
}
